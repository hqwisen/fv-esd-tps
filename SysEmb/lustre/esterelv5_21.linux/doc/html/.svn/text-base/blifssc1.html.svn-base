<!-- manual page source format generated by PolyglotMan v3.0.3a12, -->
<!-- available via anonymous ftp from ftp.cs.berkeley.edu:/ucb/people/phelps/tcltk/rman.tar.Z -->

<HTML>
<HEAD>
<TITLE>BLIFSSC(1) manual page</TITLE>
</HEAD>
<BODY>
<A HREF="#toc">Table of Contents</A><P>
<P>
 <P>
  
<H2><A NAME="sect0" HREF="#toc0">NAME </A></H2>
blifssc - Esterel ssc code producer - Version v5_21 <P>
  
<H2><A NAME="sect1" HREF="#toc1">SYNOPSYS </A></H2>
<B>blifssc 
[ -ctbl</B> <I>auxfile</I>  <B>] [ -noregwire ]</B> <I>file</I> <P>
  
<H2><A NAME="sect2" HREF="#toc2">DESCRIPTION </A></H2>
The <B>blifssc</B> code producer 
translates a circuit description in <I>BLIF</I> (Berkeley Logic Interchange Format) 
format into a description in the  <I>Esterel</I> ssc (Sorterd Soft Code) format. 
 <B>blifssc</B> takes as input two files:  <I>file</I> which contains the  <I>BLIF</I> description, 
and an auxiliary file which contains  information (see   <B>Ctbl file format</B> 
 below). The default name for the auxiliary file is the base name of <I>file</I> 
with the suffix ".ctbl". See option <B>-ctbl</B> for specifying an other auxiliary 
file. The first line of <I>file</I> must be of the form: <P>
 <P>
 <P>
<tt> </tt>&nbsp;<tt> </tt>&nbsp;# signature:  <I>number</I> 
<P>
 <P>
 See the signature part in <B>Ctbl file format.</B> The output of <B>blifssc</B> is 
a file named <I>blifssc_out.ssc.</I> See option <B>-B</B> and option <B>-D</B> to change the output 
file name.   <P>
  
<H2><A NAME="sect3" HREF="#toc3">OPTIONS </A></H2>

<DL>

<DT><B>-version</B>  </DT>
<DD>Print the version name on the standard 
output stream and terminate, ignoring all other arguments. </DD>

<DT><B>-access </B>  </DT>
<DD>Print 
various information about the compilation of the processor on the standard 
output stream and terminate, ignoring all other arguments. </DD>

<DT><B>-info     </B>  </DT>
<DD>Print 
various  information  about  the  processor compilation  on  the  standard 
error output stream and terminate, ignoring all other arguments. </DD>

<DT><B>-s</B>  </DT>
<DD>Silent 
mode. No output file is generated. </DD>

<DT><B>-v</B>  </DT>
<DD>Verbose mode. </DD>

<DT><B>-B name</B>  </DT>
<DD>name denotes 
the output file base name, The suffix ".ssc" is added automatically. If 
this option and the -D option are omitted, the name <B>blifssc_out.blif </B> is 
used. </DD>

<DT><B>-D directory</B>  </DT>
<DD>Specify a directory where the output file will be placed. 
The default is the current directory. </DD>

<DT><B>-ctbl</B>  </DT>
<DD>Specify the file which contains 
the additional information. The default name is the basename of <I>file</I> with 
the suffix ".ctbl". </DD>

<DT><B>-w</B>  </DT>
<DD>suppress all the warnings. </DD>

<DT><B>-W</B>  </DT>
<DD>print all the warnings. 
</DD>
</DL>
<P>
  
<H2><A NAME="sect4" HREF="#toc4">Ctbl file format. </A></H2>
The circuit is supposed to be the control path of an 
<I>Esterel</I> circuit. That is to say that outputs of the circuit are the  <B>action 
</B> activation wires and inputs are the result of  <B>present, if </B> and <B>dsz</B> actions. 
Additional information in the ".ctbl" concern the common  <I>Esterel</I> tables 
and specific informations for  <B>blifssc.</B> The grammar for the new informations 
is: <P>
 <P>
<tt> </tt>&nbsp;<tt> </tt>&nbsp;specific_infos<tt> </tt>&nbsp;<tt> </tt>&nbsp;:<tt> </tt>&nbsp;<tt> </tt>&nbsp;signature <BR>
 <tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;dependencies <BR>
 <tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;registers <BR>
 <tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;; <BR>
 <tt> </tt>&nbsp;<tt> </tt>&nbsp;signature<tt> </tt>&nbsp;<tt> </tt>&nbsp;:<tt> </tt>&nbsp;<tt> </tt>&nbsp;SIGNATURE 
':' INT <BR>
 <tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;; <BR>
 <P>
 <tt> </tt>&nbsp;<tt> </tt>&nbsp;pragma_refs<tt> </tt>&nbsp;<tt> </tt>&nbsp;:<tt> </tt>&nbsp;<tt> </tt>&nbsp;PRAGMAREFS ':' INT <BR>
 <tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;list_pragma_ref <BR>
 <tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;END ':' <BR>
 <tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;; <BR>
 <tt> </tt>&nbsp;<tt> </tt>&nbsp;list_pragma_ref<tt> </tt>&nbsp;<tt> </tt>&nbsp;:<tt> </tt>&nbsp;<tt> </tt>&nbsp;/* 
Empty */ <BR>
 <tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;|<tt> </tt>&nbsp;<tt> </tt>&nbsp;list_pragma_ref pragma_ref <BR>
 <tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;; <BR>
 <P>
 <tt> </tt>&nbsp;<tt> </tt>&nbsp;dependencies<tt> </tt>&nbsp;<tt> </tt>&nbsp;:<tt> </tt>&nbsp;<tt> </tt>&nbsp;DEPENDENCIES ':' 
INT  <BR>
 <tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;dependencies_list <BR>
 <tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;END ':' <BR>
 <tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;; <BR>
 <P>
 <tt> </tt>&nbsp;<tt> </tt>&nbsp;dependencies_list<tt> </tt>&nbsp;<tt> </tt>&nbsp;:<tt> </tt>&nbsp;<tt> </tt>&nbsp;dependencie  <BR>
 <tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;|<tt> </tt>&nbsp;<tt> </tt>&nbsp;dependencies_list 
dependencie <BR>
 <tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;; <BR>
 <P>
 <tt> </tt>&nbsp;<tt> </tt>&nbsp;dependencie<tt> </tt>&nbsp;<tt> </tt>&nbsp;:<tt> </tt>&nbsp;<tt> </tt>&nbsp;in_net <BR>
 <tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;|<tt> </tt>&nbsp;<tt> </tt>&nbsp;out_net <BR>
 <tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;|<tt> </tt>&nbsp;<tt> </tt>&nbsp;double_net <BR>
 <tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;; <BR>
 <P>
 <tt> </tt>&nbsp;<tt> </tt>&nbsp;in_net<tt> </tt>&nbsp;<tt> </tt>&nbsp;:<tt> </tt>&nbsp;<tt> </tt>&nbsp;INT 
':' IDENT INNET <BR>
 <tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;call_list ':' INT pragma_list <BR>
 <tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;; <BR>
 <P>
 <tt> </tt>&nbsp;<tt> </tt>&nbsp;out_net<tt> </tt>&nbsp;<tt> </tt>&nbsp;:<tt> </tt>&nbsp;<tt> </tt>&nbsp;INT ':' IDENT OUTNET 
<BR>
 <tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;call_list ':' INT pragma_list <BR>
 <tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;; <BR>
 <P>
 <tt> </tt>&nbsp;<tt> </tt>&nbsp;double_net<tt> </tt>&nbsp;<tt> </tt>&nbsp;:<tt> </tt>&nbsp;<tt> </tt>&nbsp;INT ': IDENT DOUBLENET IDENT 
<BR>
 <tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;call_list ':' INT pragma_list <BR>
 <tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;; <BR>
 <P>
 <tt> </tt>&nbsp;<tt> </tt>&nbsp;call_list<tt> </tt>&nbsp;<tt> </tt>&nbsp;:<tt> </tt>&nbsp;<tt> </tt>&nbsp;/* Empty */ <BR>
 <tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;|<tt> </tt>&nbsp;<tt> </tt>&nbsp;call_list INT 
<BR>
 <tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;; <BR>
 <P>
 <tt> </tt>&nbsp;<tt> </tt>&nbsp;registers<tt> </tt>&nbsp;<tt> </tt>&nbsp;:<tt> </tt>&nbsp;<tt> </tt>&nbsp;REGISTERS ':' INT <BR>
 <tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;RETURN ':' IDENT INT <BR>
 <tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;HALTING ':' IDENT <BR>
 <tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;registers_list 
<BR>
 <tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;END ':' <BR>
 <tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;; <BR>
 <tt> </tt>&nbsp;<tt> </tt>&nbsp;registers_list<tt> </tt>&nbsp;<tt> </tt>&nbsp;:<tt> </tt>&nbsp;<tt> </tt>&nbsp;/* Empty */ <BR>
 <tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;|<tt> </tt>&nbsp;<tt> </tt>&nbsp;registers_list register_halt <BR>
 <tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;; 
<BR>
 <P>
 <tt> </tt>&nbsp;<tt> </tt>&nbsp;register_halt<tt> </tt>&nbsp;<tt> </tt>&nbsp;:<tt> </tt>&nbsp;<tt> </tt>&nbsp;INT ':' IDENT halt_number <BR>
 <tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;; <BR>
 <P>
 <tt> </tt>&nbsp;<tt> </tt>&nbsp;halt_number<tt> </tt>&nbsp;<tt> </tt>&nbsp;:<tt> </tt>&nbsp;<tt> </tt>&nbsp;/* Empty */ <BR>
 
<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;|<tt> </tt>&nbsp;<tt> </tt>&nbsp;HALT ':' INT <BR>
 <tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;; <BR>
 <P>
 All the capitalized words are terminals. They are all but 
 <B>INT</B> and  <B>IDENT</B> found in the ".ctbl" written in normal letters; e.g.  <B>REGISTERS</B> 
is a token corresponding to <B>registers.</B> <B>INT</B> is a natural number and <B>IDENT</B> 
is a legal name of a wire. <P>
 <B>signature </B> indicates a number that will be 
used to check coherence between the ".blif" and the ".ctbl". The  <B>first</B> line 
of the ".blif" must be: <P>
<tt> </tt>&nbsp;<tt> </tt>&nbsp;# signature: integer <P>
 <B>dependencies</B> table : the 
produced <I>ssc</I> code is ordered. This table indicates the order for calling 
each action. The first entry is the first action to perform. Each entry 
gives the name of a wire and an integer which associates this wire to 
an action.  <P>
 An <B>in_net</B> dependency corresponds to a  <B>present</B> action. An <B>out_net</B> 
dependency corresponds to a  <B>call</B> action. A <B>double_net</B> dependency corresponds 
to  <B>if</B> and <B>dsz</B> actions. The first  <B>IDENT</B> indicates the wire carrying the 
return value, and the second is the start of the action. See  <B><A HREF="sscblifl.html">sscblif(l)</A>
.</B> 
For each entry one gives the list (possibly empty) <B>call_list</B> of each  
<I>direct</I> wire the entry depends on. Thus the dependency table is <B>sorted.</B> The 
final number indicates the associated action. This table can not be empty. 
 <P>
 <B>registers</B> table indicates for each listed register the associated <B>halt.</B> 
This list may be empty. This table also contains the name of the  <I>ssc</I> <B>RETURN</B> 
wire and its halt number, and the name of the <I>ssc</I> <B>HALTING</B> wire. <P>
 <P>
  
<H2><A NAME="sect5" HREF="#toc5">BUGS 
</A></H2>
<B>blifssc</B> does not support hierarchical <I>BLIF</I> descriptions. <P>
  
<H2><A NAME="sect6" HREF="#toc6">SEE ALSO </A></H2>
The 
Esterel v5_21 Documentation.  <BR>
<A HREF="esterel1.html">esterel(1)</A>
, <A HREF="blifopt1.html">blifopt(1)</A>
, <A HREF="sis1.html">sis(1)</A>
, <A HREF="sscblif1.html">sscblif(1)</A>
 
<P>
  
<H2><A NAME="sect7" HREF="#toc7">IDENTIFICATION </A></H2>
Ecole des Mines de Paris (CMA) and INRIA  <BR>
Author: Francois-Xavier 
Fornari <P>
 <P>

<HR><P>
<A NAME="toc"><B>Table of Contents</B></A><P>
<UL>
<LI><A NAME="toc0" HREF="#sect0">NAME</A></LI>
<LI><A NAME="toc1" HREF="#sect1">SYNOPSYS</A></LI>
<LI><A NAME="toc2" HREF="#sect2">DESCRIPTION</A></LI>
<LI><A NAME="toc3" HREF="#sect3">OPTIONS</A></LI>
<LI><A NAME="toc4" HREF="#sect4">Ctbl file format.</A></LI>
<LI><A NAME="toc5" HREF="#sect5">BUGS</A></LI>
<LI><A NAME="toc6" HREF="#sect6">SEE ALSO</A></LI>
<LI><A NAME="toc7" HREF="#sect7">IDENTIFICATION</A></LI>
</UL>
<P><A HREF="index.html">Back To Main Manual Page</A><P>
</BODY></HTML>
