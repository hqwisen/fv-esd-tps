<!-- manual page source format generated by PolyglotMan v3.0.3a12, -->
<!-- available via anonymous ftp from ftp.cs.berkeley.edu:/ucb/people/phelps/tcltk/rman.tar.Z -->

<HTML>
<HEAD>
<TITLE>sscoc(1) manual page</TITLE>
</HEAD>
<BODY>
<A HREF="#toc">Table of Contents</A><P>
 
<H2><A NAME="sect0" HREF="#toc0">NAME </A></H2>
sscoc - Esterel compiler to automata in <B>oc </B> format  and <B>oc </B> format 
optimizer - Version v5_21  
<H2><A NAME="sect1" HREF="#toc1">SYNOPSIS </A></H2>
<B>sscoc</B> [options] file1 file2 ...  
<H2><A NAME="sect2" HREF="#toc2">DESCRIPTION 
</A></H2>
The <B>sscoc </B> processor of the Esterel compiler has two functions. First, 
it translates boolean equations in <B>ssc </B> format into fully-expanded or single-state 
(with option <B>-mono </B>) automata in <B>oc </B> format. Second, if option <B>-O </B> is set, 
it optimizes the produced automata. <P>
 <B>sscoc </B> reads one or more <B>ssc </B> format 
or <B>oc </B> format input files and produces a single <B>oc </B> format output file. 
 If there is no input file, the standard input stream is read.  If no output 
file is specified (using <B>-B </B> or <B>-D </B> option) the standard output stream is 
used. Typical use is:  <BR>
 <P>
    sscoc &lt; foo.ssc &gt; foo.oc  <P>
or  <P>
    sscoc -mono foo.ssc 
-D /tmp  <P>
or  <P>
    sscoc foo.oc -B foo_opt -O <P>
The following options are interpreted 
by <B>sscoc </B>. The order of theses options is not significative and they can 
even be placed after or between the names of the files to process. The 
following options control the automata optimization : 
<DL>

<DT><B>-mono </B> </DT>
<DD>This option 
tells the compiler to translate boolean equation systems in <B>ssc </B> format 
into straight-line single-state <B>oc </B> format instead of computing the equivalent 
automata. </DD>

<DT><B>-O </B>, <B>-O </B><I>n </I>, and <B>-Ono_dags </B> </DT>
<DD>Optimize the <B>oc </B> code produced. The list 
of optimizations performed by the processor may be selected with a combination 
of bits, with the following correspondence:  <BR>
 <P>
        bit 0 (value:  1): 
strip actions  <BR>
        bit 1 (value:  2): remove useless tests  <BR>
      
  bit 2 (value:  4): factorize tests  <BR>
        bit 3 (value:  8): reduce 
trees  <BR>
        bit 4 (value: 16): strip trees  <BR>
        bit 5 (value: 32): 
group actions  <P>
 <BR>
If <I>n </I> is not given, value 63 (i.e.: perform all optimizations) 
is assumed. The special value <B>no_dags </B> selects all optimizations which 
do not create any sub-dag, in order to still be able to use all tools working 
on plain automata (e.g.  <B>ocmauto </B>).  <BR>
The meaning of each optimization is 
as follow:  <blockquote></DD>

<DT><B>strip actions</B>  </DT>
<DD>Optimize action table by removing duplicated 
actions. The source references of such actions are also removed. </DD>

<DT><B>remove 
useless tests</B>  </DT>
<DD>Optimize action trees by replacing decision trees of the 
form "if A then B else B" by simply "B". </DD>

<DT><B>factorize tests</B>  </DT>
<DD>For each test 
action, try to move up, before the test action, the actions which appear 
in both the then-part and the else-part of a test tree. </DD>

<DT><B>reduce trees</B>  </DT>
<DD>Optimize 
action trees by replacing duplicated sub-trees by new trees. This option 
produces <B>oc </B> format which can not be read by <B>oc </B> processors working on 
plain automata. </DD>

<DT><B>strip trees</B>  </DT>
<DD>Optimize action trees by replacing duplicate 
linear action trees by new actions. </DD>

<DT><B>group actions</B>  </DT>
<DD>Group actions always 
following each other. Very useful in combination with option <B>-mono </B>. </DD>
</DL>
 </blockquote>
<P>
 
<DL>

<DT>All 
optimizations are tried in the above order, but the user may  </DT>
<DD>changed 
this order with option <B>-reduce_first </B> (see below). Statistics on the optimization 
may be printed with option <B>-v2 </B> (see below). </DD>

<DT><B>-reduce_first </B> </DT>
<DD>This option force 
the tree reduction to be made before the test factorization. Doing so is 
faster but may lead to a lesser optimization. </DD>

<DT><B>-tree_overhead= </B><I>n </I> </DT>
<DD>Specify 
the number of integers (<I>n </I>) occupied by a new tree in the final code. This 
number of integers is:  <BR>
<tt> </tt>&nbsp;<tt> </tt>&nbsp;[sizeof(tree overhead) / sizeof(integer)]  <BR>
where 
"sizeof(integer)" is the size of the object coding a tree element in the 
final code. This number is used to compute the minimum length of the redundant 
sub-trees which can be replaced when processing the <B>-O </B> option (see above). 
Default is 4. </DD>

<DT><B>-action_overhead=<I>n </I></B> </DT>
<DD>Specify the number of integers (<I>n </I>) occupied 
by a new action in the final code. This number of integers is:  <BR>
<tt> </tt>&nbsp;<tt> </tt>&nbsp;[sizeof(action 
overhead) / sizeof(integer)]  <BR>
where "sizeof(integer)" is the size of the 
object coding a tree element in the final code. This number is used to 
compute the minimum length of the redundant sequence of actions which 
can be replaced when processing the <B>-O </B> option (see above). Default is 10. 
</DD>

<DT><B>-no_after_dag_pragmas </B> </DT>
<DD>Remove the lists of emitted local signals computed 
by the compiler and which are normally written after each state transition. 
This gives better optimization but removes some debugging information. 
</DD>

<DT><B>-v2 </B> </DT>
<DD>Full verbose option: print on the standard error stream statistics 
of the optimization (the number of actions or integers removed, the number 
of trees added, etc.). This options implies <B>-v </B> (see below). </DD>
</DL>
<P>
The remaining 
options are common to all processors of the Esterel compiler : 
<DL>

<DT><B>-B </B> <I>name 
</I> </DT>
<DD><I>name </I> defines the output file base name. The suffix ".oc" is added automatically 
(and possibly a working directory name -- see the following option). If this 
option and the <B>-D </B> option are omitted, the standard output stream is used. 
Be careful not to give the output file the same directory and base names 
than those of an <B>oc </B> file to optimize ! </DD>

<DT><B>-D </B> <I>directory </I> </DT>
<DD>Specify  a directory 
where the output file will be placed. The default is the current directory. 
See <B>-B </B> option above. </DD>

<DT><B>-v </B> </DT>
<DD>First verbose option: print on the standard error 
stream the name of each module as it is processed and whether it is compiled, 
optimized, or both. </DD>

<DT><B>-v2 </B> </DT>
<DD>Second verbose option: print on the standard error 
stream statistics of the optimization (the number of actions or integers 
removed, the number of trees added, etc.). This options implies <B>-v </B>. </DD>

<DT><B>-size 
</B> </DT>
<DD>Print automata size statistics on the standard error stream: the number 
of states, the number of actions and the number of action calls. </DD>

<DT><B>-show </B> 
</DT>
<DD>Display dynamically, on the standard error stream, the number of states 
generated and analyzed so far. </DD>

<DT><B>-s </B> </DT>
<DD>Silent mode. Perform compilation and/or 
optimizations but do not produce the output file. </DD>

<DT><B>-w </B> </DT>
<DD>Suppress all warning 
messages. </DD>

<DT><B>-stat </B> </DT>
<DD>Print statistics on the standard error stream: the parsing 
and compiling time and the process size (physical memory only). Implemented 
on BSD4x systems only. </DD>

<DT><B>-version </B> </DT>
<DD>Print the version name on the standard 
error stream and terminate, ignoring all other arguments. </DD>

<DT><B>-access </B> </DT>
<DD>Print 
processor protection information on the standard error stream and terminate, 
ignoring all other arguments. </DD>

<DT><B>-info </B> </DT>
<DD>Print various information about the 
compilation of the processor on the standard error stream and terminate, 
ignoring all other arguments. </DD>
</DL>
 
<H2><A NAME="sect3" HREF="#toc3">BUGS </A></H2>
The multiple emissions of single signals 
are not yet detected during the compilation of boolean equations into 
automata, even fully-expanded. <P>
 Simulation information of single-state generated 
automata tells that all input signals are always awaited. <P>
 Simulation of 
single-state generated automata can not check all expressions as they are 
in Esterel v3 compiler. <P>
 Some statistics on optimization are not so informative 
as they could be. <P>
 Please report all other bugs to the ESTEREL team.  
<H2><A NAME="sect4" HREF="#toc4">SEE 
ALSO </A></H2>
Esterel documentations.  <BR>
<A HREF="esterel1.html">esterel(1)</A>
, <A HREF="lcoc1.html">lcoc(1)</A>
, <A HREF="lcsc1.html">lcsc(1)</A>
, <A HREF="scssc1.html">scssc(1)</A>
, <A HREF="occ1.html">occ(1)</A>
 
 
<H2><A NAME="sect5" HREF="#toc5">IDENTIFICATION </A></H2>
Ecole des Mines de Paris (CMA) and INRIA.  <BR>
 <P>
Author: Frederic 
Mignard. Updated by Francois-Xavier Fornari. <P>

<HR><P>
<A NAME="toc"><B>Table of Contents</B></A><P>
<UL>
<LI><A NAME="toc0" HREF="#sect0">NAME</A></LI>
<LI><A NAME="toc1" HREF="#sect1">SYNOPSIS</A></LI>
<LI><A NAME="toc2" HREF="#sect2">DESCRIPTION</A></LI>
<LI><A NAME="toc3" HREF="#sect3">BUGS</A></LI>
<LI><A NAME="toc4" HREF="#sect4">SEE ALSO</A></LI>
<LI><A NAME="toc5" HREF="#sect5">IDENTIFICATION</A></LI>
</UL>
<P><A HREF="index.html">Back To Main Manual Page</A><P>
</BODY></HTML>
