<!-- manual page source format generated by PolyglotMan v3.0.3a12, -->
<!-- available via anonymous ftp from ftp.cs.berkeley.edu:/ucb/people/phelps/tcltk/rman.tar.Z -->

<HTML>
<HEAD>
<TITLE>SSCBLIF(L) manual page</TITLE>
</HEAD>
<BODY>
<A HREF="#toc">Table of Contents</A><P>
<P>
 <P>
  
<H2><A NAME="sect0" HREF="#toc0">NAME </A></H2>
sscblif - Esterel  blif code producer for Esterel v5_21 <P>
  
<H2><A NAME="sect1" HREF="#toc1">SYNOPSIS 
</A></H2>
<B>sscblif [options] </B> <I>file.ssc</I> <P>
  
<H2><A NAME="sect2" HREF="#toc2">DESCRIPTION </A></H2>
The <B>sscblif</B> code producer takes 
as input a circuit described in  <I>ssc</I>  format (Sorted Soft Code Format) 
and translates it into a circuit described in  <I>blif</I> (Berkeley Logic Interchange 
Format).  When used without any options,  <B>sscblif</B> only translates circuits 
generated from Pure Esterel programs with possible counters. With -soft 
option circuits from Full Esterel programs are accepted. The result is 
a circuit describing the control of the program. It may be used by the 
 <B>blifssc</B> processor to generate optimized <I>ssc</I> code. The produced circuits 
may be optimized (see option -O). In that case, <B>sscblif</B> calls <B>blifopt-1.2.</B> 
This program will call the optimizer  <B>sis-1.2. </B> The user can use his/her 
own optimizer by setting the shell  <B>SSCBLIF_OPT</B> variable to the new program 
name.  <B>sscblif</B> will call this new one instead of <B>blifopt-1.2. </B> The options 
must be the same. <P>
 <P>
  
<H2><A NAME="sect3" HREF="#toc3">OPTIONS </A></H2>

<DL>

<DT><B>-version</B>  </DT>
<DD>Print the version name on the standard 
output stream and terminate, ignoring all other arguments. </DD>

<DT><B>-access </B>  </DT>
<DD>Print 
various informations about the compilation of the processor on the standard 
output stream and terminate, ignoring all other arguments. </DD>

<DT><B>-info     </B>  </DT>
<DD>Print 
various  informations  about  the  processor compilation  on  the  standard 
error output stream and terminate, ignoring all other arguments. </DD>

<DT><B>-s</B>  </DT>
<DD>Silent 
mode. No output is generated. </DD>

<DT><B>-v</B>  </DT>
<DD>Verbose mode. </DD>

<DT><B>-B</B><I> name</I>  </DT>
<DD> <P>
name denotes the 
output file base name, The suffix ".opt.blif" is added automatically. If 
this option and the -D option are omitted, the name <I>sscblif_out.opt.blif</I> 
 is used.  </DD>

<DT><B>-D</B><I> directory</I>  </DT>
<DD>Specifies a directory where the output file(s) 
will be placed. The default is the current directory. </DD>

<DT><B>-hierarchy</B>  </DT>
<DD>Decompose 
the circuit into subcircuits. Use this option to optimize large circuits. 
</DD>

<DT><B>-K</B>  </DT>
<DD>Keeps intermediate files. </DD>

<DT><B>-O</B>  </DT>
<DD>Call the optimizer. Default optimizations 
improves speed of Pure Esterel programs and improves area in case of control 
extraction (see -soft option). Optimizations can be controlled with the 
following options:  <blockquote></DD>

<DT><B>-area</B>  </DT>
<DD>Optimizes using area optimization. </DD>

<DT><B>-h_speed</B>  </DT>
<DD>Optimizes 
using speed optimization only. </DD>

<DT><B>-speed</B>  </DT>
<DD>Optimizes using speed optimization 
and performs technology mapping to Xilinx. </DD>

<DT><B>-script </B>  </DT>
<DD><I>filename</I>  <BR>
Specify to 
use the file <I>filename</I> as optimization script. The name of the script must 
be a full file name. See  <B><A HREF="sis1.html">sis(1)</A>
 </B> for writing scripts. </DD>
</DL>
 </blockquote>

<DL>

<DT><B>-soft</B>  </DT>
<DD>Specify to 
extract the control of the circuit. </DD>

<DT><B>-makefile</B>  </DT>
<DD><B>sscblif </B> produces a makefile 
when optimization is run and deletes it unless the -K option is specified. 
The -makefile option allows to obtain this makefile without running the 
optimization. </DD>

<DT><B>-w</B>  </DT>
<DD>suppress any warning. </DD>

<DT><B>-W</B>  </DT>
<DD>print out any warning. </DD>
</DL>
<P>
 <P>
 <P>
  
<H2><A NAME="sect4" HREF="#toc4">EXAMPLES 
</A></H2>
If foo.ssc is generated from a Pure Esterel program, the command:  <blockquote>sscblif 
foo.ssc -B foo  </blockquote>
produce the file foo.blif. If the original program contains 
static counters (ie counters with a known value at compile time, such 
as <I>await 4 I </I>), then two files are produced: 
<DL>

<DT><I>foo.ctl.blif</I>  </DT>
<DD>this file contains 
the program control. </DD>

<DT><I>foo.blif</I>  </DT>
<DD>this is the main circuit that contains the 
description of the needed counters and the call to the program control 
circuit. </DD>
</DL>
<P>
If foo.ssc is generated from a general Esterel program, then sscblif 
can only extracts the program control logic. It must be called as follows: 
 <blockquote>sscblif -soft foo.ssc  </blockquote>
In this case, two files are generated: 
<DL>

<DT><I>foo.blif</I>  
</DT>
<DD>the actual circuit from the program control. </DD>

<DT><I>foo.ctbl</I>  </DT>
<DD>this file describes 
the dependencies between the actions within the Esterel program and will 
be used when rebuild a .ssc file from a .blif file. See <A HREF="blifssc1.html">blifssc(1)</A>
. </DD>
</DL>
<P>
The command: 
 <blockquote>sscblif -O foo.ssc -B foo  </blockquote>
will produce an optimized circuit always in the 
file foo.opt.blif. <P>
 Finally, assuming that foo.ssc is generated from a Full 
Esterel program, the following command:  <blockquote>sscblif foo.ssc -B foo -soft -hierarchy 
-O -script /tmp/foo.script  </blockquote>
will extract the control of the circuit and decompose 
it in sub-circuits. Each sub-circuit will be optimized using the user script 
/tmp/foo.script.  <P>
  
<H2><A NAME="sect5" HREF="#toc5">BUGS </A></H2>
<B>inputoutput </B> signals receive a special treatment 
since an <B>inputoutput </B> wire cannot be expressed in <B>blif </B>. Thus, for each 
<B>inputoutput </B> signal, say X, two wires are generated: one for the input 
and one for the output. The naming convention is as follow: the input wire 
is named <B>X_IO_I </B> while the output signal is named <B>X_IO_O </B>. Be careful to 
not already have  a signal with one of this name since no checks are performed. 
<P>
 <P>
  
<H2><A NAME="sect6" HREF="#toc6">FILES </A></H2>
A make file is generated when optimizing. The base name of this 
file depends on the -B option and its suffix is .make. With -soft option another 
file is generated with suffix .ctbl. This file will be used by the <B>blifssc</B> 
processor.  <P>
 <P>
  
<H2><A NAME="sect7" HREF="#toc7">SEE ALSO </A></H2>
The Esterel v5_21 Documentation.  <BR>
<A HREF="esterel1.html">esterel(1)</A>
, <A HREF="scssc1.html">scssc(1)</A>
, 
<A HREF="blifopt1.html">blifopt(1)</A>
, <A HREF="sis1.html">sis(1)</A>
, <A HREF="blifssc1.html">blifssc(1)</A>
 <P>
  
<H2><A NAME="sect8" HREF="#toc8">IDENTIFICATION </A></H2>
Ecole des Mines de Paris 
(CMA) and INRIA.  <BR>
Author: Francois-Xavier Fornari. <P>

<HR><P>
<A NAME="toc"><B>Table of Contents</B></A><P>
<UL>
<LI><A NAME="toc0" HREF="#sect0">NAME</A></LI>
<LI><A NAME="toc1" HREF="#sect1">SYNOPSIS</A></LI>
<LI><A NAME="toc2" HREF="#sect2">DESCRIPTION</A></LI>
<LI><A NAME="toc3" HREF="#sect3">OPTIONS</A></LI>
<LI><A NAME="toc4" HREF="#sect4">EXAMPLES</A></LI>
<LI><A NAME="toc5" HREF="#sect5">BUGS</A></LI>
<LI><A NAME="toc6" HREF="#sect6">FILES</A></LI>
<LI><A NAME="toc7" HREF="#sect7">SEE ALSO</A></LI>
<LI><A NAME="toc8" HREF="#sect8">IDENTIFICATION</A></LI>
</UL>
<P><A HREF="index.html">Back To Main Manual Page</A><P>
</BODY></HTML>
