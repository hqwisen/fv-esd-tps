node output(u, w:real; initial:real) returns (y:real);
let
    y = initial -> 0.7 * pre(y) + 0.5 * u - w;
tel;


node pid(P, I, D, e:real) returns (u:real);
var first, pass:bool; sum_errors:real;
let
    first = true -> false;
    pass = false -> if pre(first) then false
                    else true;
    sum_errors = e -> pre(sum_errors) + e;
    u = if pass then (P * e + D  * (e - pre(e)) + I * sum_errors)
        else 0.0;
tel;

node system(r, P, I, D, w:real) returns (y:real);
var e, et, u:real;
let
    y = output(u, w, 20.0);
    et = r - y;
    e = 0.0 -> pre(et);
    u = pid(P, I, D, e);
tel;
